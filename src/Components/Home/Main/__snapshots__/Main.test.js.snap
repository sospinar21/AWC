// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main
    addEvents={[Function]}
    addLocation={[Function]}
    addStudios={[Function]}
    selectedLocation="Denver"
    suggestedEvents={
        Object {
            "name": "workshop",
          }
    }
    user={
        Object {
            "username": "Laura",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="nav"
>
          <div
                    className="logo"
          >
                    <div
                              className="logocir"
                    >
                              AWC
                    </div>
          </div>
          <form
                    className="location-form"
          >
                    <input
                              className="city-input"
                              list="locations"
                              onInput={[Function]}
                              placeholder="Start typing your City"
                              type="text"
                    />
                    <button
                              className="submit-location"
                              onClick={[Function]}
                    >
                              Search
                    </button>
          </form>
          <datalist
                    id="locations"
          >
                    
          </datalist>
          <div
                    className="actual-location"
          >
                    <i
                              className="material-icons"
                    >
                              location_on
                    </i>
                    <h1>
                              Denver
                    </h1>
          </div>
          <div
                    className="buffer"
          />
          <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="signink"
                    to="/signin"
          >
                    <div
                              className="txt"
                    >
                              <div
                                        className="txt"
                                        onClick={[Function]}
                              >
                                        Log Out
                              </div>
                    </div>
                    <div
                              className="ico"
                    >
                              <svg
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                        xmlns="http://www.w3.org/2000/svg"
                              >
                                        <path
                                                  d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                        />
                                        <path
                                                  d="M0 0h24v24H0z"
                                                  fill="none"
                                        />
                              </svg>
                    </div>
          </NavLink>
</div>,
        <div
          className="main"
>
          <div
                    className="profile box"
          >
                    <Connect(NavBar)
                              makeCommunityActive={[Function]}
                              makeEventsActive={[Function]}
                              makeStudioActive={[Function]}
                    />
          </div>
          <div
                    className="posts box"
          >
                    <div
                              className="filters"
                    >
                              <NavLink
                                        activeClassName="active"
                                        ariaCurrent="true"
                                        className="main-btn"
                                        onClick={[Function]}
                                        to="/"
                              >
                                        Post!
                              </NavLink>
                              <NavLink
                                        activeClassName="active"
                                        ariaCurrent="true"
                                        className="main-btn"
                                        to="/entertainment"
                              >
                                        Videos
                              </NavLink>
                              <button
                                        className="main-btn"
                                        onClick={[Function]}
                              >
                                        Events
                              </button>
                              <button
                                        className="main-btn"
                                        onClick={[Function]}
                              >
                                        Studios
                              </button>
                    </div>
                    <div
                              className="main-box"
                    >
                              <Connect(Community) />
                    </div>
          </div>
          <div
                    className="stack"
          >
                    <div
                              className="stacked  box"
                              id="studios"
                    />
                    <div
                              className="stacked  box"
                              id="featured"
                    >
                              <h3>
                                        Featured Video
                              </h3>
                              <iframe
                                        allow="autoplay; encrypted-media"
                                        allowFullScreen={true}
                                        frameBorder="0"
                                        height="215"
                                        src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                                        width="350"
                              />
                    </div>
          </div>
</div>,
      ],
      "className": "body",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="logo"
>
              <div
                            className="logocir"
              >
                            AWC
              </div>
</div>,
            <form
              className="location-form"
>
              <input
                            className="city-input"
                            list="locations"
                            onInput={[Function]}
                            placeholder="Start typing your City"
                            type="text"
              />
              <button
                            className="submit-location"
                            onClick={[Function]}
              >
                            Search
              </button>
</form>,
            <datalist
              id="locations"
>
              
</datalist>,
            <div
              className="actual-location"
>
              <i
                            className="material-icons"
              >
                            location_on
              </i>
              <h1>
                            Denver
              </h1>
</div>,
            <div
              className="buffer"
/>,
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="signink"
              to="/signin"
>
              <div
                            className="txt"
              >
                            <div
                                          className="txt"
                                          onClick={[Function]}
                            >
                                          Log Out
                            </div>
              </div>
              <div
                            className="ico"
              >
                            <svg
                                          height="24"
                                          viewBox="0 0 24 24"
                                          width="24"
                                          xmlns="http://www.w3.org/2000/svg"
                            >
                                          <path
                                                        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                          />
                                          <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                          />
                            </svg>
              </div>
</NavLink>,
          ],
          "className": "nav",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="logocir"
>
                AWC
</div>,
              "className": "logo",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "AWC",
                "className": "logocir",
              },
              "ref": null,
              "rendered": "AWC",
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  className="city-input"
                  list="locations"
                  onInput={[Function]}
                  placeholder="Start typing your City"
                  type="text"
/>,
                <button
                  className="submit-location"
                  onClick={[Function]}
>
                  Search
</button>,
              ],
              "className": "location-form",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "city-input",
                  "list": "locations",
                  "onInput": [Function],
                  "placeholder": "Start typing your City",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Search",
                  "className": "submit-location",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Search",
                "type": "button",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "id": "locations",
            },
            "ref": null,
            "rendered": Array [],
            "type": "datalist",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  className="material-icons"
>
                  location_on
</i>,
                <h1>
                  Denver
</h1>,
              ],
              "className": "actual-location",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "location_on",
                  "className": "material-icons",
                },
                "ref": null,
                "rendered": "location_on",
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Denver",
                },
                "ref": null,
                "rendered": "Denver",
                "type": "h1",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "buffer",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": Array [
                <div
                  className="txt"
>
                  <div
                                    className="txt"
                                    onClick={[Function]}
                  >
                                    Log Out
                  </div>
</div>,
                <div
                  className="ico"
>
                  <svg
                                    height="24"
                                    viewBox="0 0 24 24"
                                    width="24"
                                    xmlns="http://www.w3.org/2000/svg"
                  >
                                    <path
                                                      d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                    />
                                    <path
                                                      d="M0 0h24v24H0z"
                                                      fill="none"
                                    />
                  </svg>
</div>,
              ],
              "className": "signink",
              "to": "/signin",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="txt"
                    onClick={[Function]}
>
                    Log Out
</div>,
                  "className": "txt",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Log Out",
                    "className": "txt",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Log Out",
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <svg
                    height="24"
                    viewBox="0 0 24 24"
                    width="24"
                    xmlns="http://www.w3.org/2000/svg"
>
                    <path
                                        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                    />
                    <path
                                        d="M0 0h24v24H0z"
                                        fill="none"
                    />
</svg>,
                  "className": "ico",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <path
                        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
/>,
                      <path
                        d="M0 0h24v24H0z"
                        fill="none"
/>,
                    ],
                    "height": "24",
                    "viewBox": "0 0 24 24",
                    "width": "24",
                    "xmlns": "http://www.w3.org/2000/svg",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "d": "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "path",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "d": "M0 0h24v24H0z",
                        "fill": "none",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "path",
                    },
                  ],
                  "type": "svg",
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="profile box"
>
              <Connect(NavBar)
                            makeCommunityActive={[Function]}
                            makeEventsActive={[Function]}
                            makeStudioActive={[Function]}
              />
</div>,
            <div
              className="posts box"
>
              <div
                            className="filters"
              >
                            <NavLink
                                          activeClassName="active"
                                          ariaCurrent="true"
                                          className="main-btn"
                                          onClick={[Function]}
                                          to="/"
                            >
                                          Post!
                            </NavLink>
                            <NavLink
                                          activeClassName="active"
                                          ariaCurrent="true"
                                          className="main-btn"
                                          to="/entertainment"
                            >
                                          Videos
                            </NavLink>
                            <button
                                          className="main-btn"
                                          onClick={[Function]}
                            >
                                          Events
                            </button>
                            <button
                                          className="main-btn"
                                          onClick={[Function]}
                            >
                                          Studios
                            </button>
              </div>
              <div
                            className="main-box"
              >
                            <Connect(Community) />
              </div>
</div>,
            <div
              className="stack"
>
              <div
                            className="stacked  box"
                            id="studios"
              />
              <div
                            className="stacked  box"
                            id="featured"
              >
                            <h3>
                                          Featured Video
                            </h3>
                            <iframe
                                          allow="autoplay; encrypted-media"
                                          allowFullScreen={true}
                                          frameBorder="0"
                                          height="215"
                                          src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                                          width="350"
                            />
              </div>
</div>,
          ],
          "className": "main",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(NavBar)
                makeCommunityActive={[Function]}
                makeEventsActive={[Function]}
                makeStudioActive={[Function]}
/>,
              "className": "profile box",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "makeCommunityActive": [Function],
                "makeEventsActive": [Function],
                "makeStudioActive": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="filters"
>
                  <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="main-btn"
                                    onClick={[Function]}
                                    to="/"
                  >
                                    Post!
                  </NavLink>
                  <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="main-btn"
                                    to="/entertainment"
                  >
                                    Videos
                  </NavLink>
                  <button
                                    className="main-btn"
                                    onClick={[Function]}
                  >
                                    Events
                  </button>
                  <button
                                    className="main-btn"
                                    onClick={[Function]}
                  >
                                    Studios
                  </button>
</div>,
                <div
                  className="main-box"
>
                  <Connect(Community) />
</div>,
              ],
              "className": "posts box",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      className="main-btn"
                      onClick={[Function]}
                      to="/"
>
                      Post!
</NavLink>,
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      className="main-btn"
                      to="/entertainment"
>
                      Videos
</NavLink>,
                    <button
                      className="main-btn"
                      onClick={[Function]}
>
                      Events
</button>,
                    <button
                      className="main-btn"
                      onClick={[Function]}
>
                      Studios
</button>,
                  ],
                  "className": "filters",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Post!",
                      "className": "main-btn",
                      "onClick": [Function],
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": "Post!",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "ariaCurrent": "true",
                      "children": "Videos",
                      "className": "main-btn",
                      "to": "/entertainment",
                    },
                    "ref": null,
                    "rendered": "Videos",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Events",
                      "className": "main-btn",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Events",
                    "type": "button",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Studios",
                      "className": "main-btn",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Studios",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(Community) />,
                  "className": "main-box",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="stacked  box"
                  id="studios"
/>,
                <div
                  className="stacked  box"
                  id="featured"
>
                  <h3>
                                    Featured Video
                  </h3>
                  <iframe
                                    allow="autoplay; encrypted-media"
                                    allowFullScreen={true}
                                    frameBorder="0"
                                    height="215"
                                    src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                                    width="350"
                  />
</div>,
              ],
              "className": "stack",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "stacked  box",
                  "id": "studios",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h3>
                      Featured Video
</h3>,
                    <iframe
                      allow="autoplay; encrypted-media"
                      allowFullScreen={true}
                      frameBorder="0"
                      height="215"
                      src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                      width="350"
/>,
                  ],
                  "className": "stacked  box",
                  "id": "featured",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Featured Video",
                    },
                    "ref": null,
                    "rendered": "Featured Video",
                    "type": "h3",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "allow": "autoplay; encrypted-media",
                      "allowFullScreen": true,
                      "frameBorder": "0",
                      "height": "215",
                      "src": "https://www.youtube.com/embed/2X2tCidTfEU?rel=0",
                      "width": "350",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "iframe",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="nav"
>
            <div
                        className="logo"
            >
                        <div
                                    className="logocir"
                        >
                                    AWC
                        </div>
            </div>
            <form
                        className="location-form"
            >
                        <input
                                    className="city-input"
                                    list="locations"
                                    onInput={[Function]}
                                    placeholder="Start typing your City"
                                    type="text"
                        />
                        <button
                                    className="submit-location"
                                    onClick={[Function]}
                        >
                                    Search
                        </button>
            </form>
            <datalist
                        id="locations"
            >
                        
            </datalist>
            <div
                        className="actual-location"
            >
                        <i
                                    className="material-icons"
                        >
                                    location_on
                        </i>
                        <h1>
                                    Denver
                        </h1>
            </div>
            <div
                        className="buffer"
            />
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="signink"
                        to="/signin"
            >
                        <div
                                    className="txt"
                        >
                                    <div
                                                className="txt"
                                                onClick={[Function]}
                                    >
                                                Log Out
                                    </div>
                        </div>
                        <div
                                    className="ico"
                        >
                                    <svg
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                                xmlns="http://www.w3.org/2000/svg"
                                    >
                                                <path
                                                            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                />
                                                <path
                                                            d="M0 0h24v24H0z"
                                                            fill="none"
                                                />
                                    </svg>
                        </div>
            </NavLink>
</div>,
          <div
            className="main"
>
            <div
                        className="profile box"
            >
                        <Connect(NavBar)
                                    makeCommunityActive={[Function]}
                                    makeEventsActive={[Function]}
                                    makeStudioActive={[Function]}
                        />
            </div>
            <div
                        className="posts box"
            >
                        <div
                                    className="filters"
                        >
                                    <NavLink
                                                activeClassName="active"
                                                ariaCurrent="true"
                                                className="main-btn"
                                                onClick={[Function]}
                                                to="/"
                                    >
                                                Post!
                                    </NavLink>
                                    <NavLink
                                                activeClassName="active"
                                                ariaCurrent="true"
                                                className="main-btn"
                                                to="/entertainment"
                                    >
                                                Videos
                                    </NavLink>
                                    <button
                                                className="main-btn"
                                                onClick={[Function]}
                                    >
                                                Events
                                    </button>
                                    <button
                                                className="main-btn"
                                                onClick={[Function]}
                                    >
                                                Studios
                                    </button>
                        </div>
                        <div
                                    className="main-box"
                        >
                                    <Connect(Community) />
                        </div>
            </div>
            <div
                        className="stack"
            >
                        <div
                                    className="stacked  box"
                                    id="studios"
                        />
                        <div
                                    className="stacked  box"
                                    id="featured"
                        >
                                    <h3>
                                                Featured Video
                                    </h3>
                                    <iframe
                                                allow="autoplay; encrypted-media"
                                                allowFullScreen={true}
                                                frameBorder="0"
                                                height="215"
                                                src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                                                width="350"
                                    />
                        </div>
            </div>
</div>,
        ],
        "className": "body",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="logo"
>
                <div
                                className="logocir"
                >
                                AWC
                </div>
</div>,
              <form
                className="location-form"
>
                <input
                                className="city-input"
                                list="locations"
                                onInput={[Function]}
                                placeholder="Start typing your City"
                                type="text"
                />
                <button
                                className="submit-location"
                                onClick={[Function]}
                >
                                Search
                </button>
</form>,
              <datalist
                id="locations"
>
                
</datalist>,
              <div
                className="actual-location"
>
                <i
                                className="material-icons"
                >
                                location_on
                </i>
                <h1>
                                Denver
                </h1>
</div>,
              <div
                className="buffer"
/>,
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                className="signink"
                to="/signin"
>
                <div
                                className="txt"
                >
                                <div
                                                className="txt"
                                                onClick={[Function]}
                                >
                                                Log Out
                                </div>
                </div>
                <div
                                className="ico"
                >
                                <svg
                                                height="24"
                                                viewBox="0 0 24 24"
                                                width="24"
                                                xmlns="http://www.w3.org/2000/svg"
                                >
                                                <path
                                                                d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                />
                                                <path
                                                                d="M0 0h24v24H0z"
                                                                fill="none"
                                                />
                                </svg>
                </div>
</NavLink>,
            ],
            "className": "nav",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="logocir"
>
                  AWC
</div>,
                "className": "logo",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "AWC",
                  "className": "logocir",
                },
                "ref": null,
                "rendered": "AWC",
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="city-input"
                    list="locations"
                    onInput={[Function]}
                    placeholder="Start typing your City"
                    type="text"
/>,
                  <button
                    className="submit-location"
                    onClick={[Function]}
>
                    Search
</button>,
                ],
                "className": "location-form",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "city-input",
                    "list": "locations",
                    "onInput": [Function],
                    "placeholder": "Start typing your City",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Search",
                    "className": "submit-location",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Search",
                  "type": "button",
                },
              ],
              "type": "form",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "id": "locations",
              },
              "ref": null,
              "rendered": Array [],
              "type": "datalist",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <i
                    className="material-icons"
>
                    location_on
</i>,
                  <h1>
                    Denver
</h1>,
                ],
                "className": "actual-location",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "location_on",
                    "className": "material-icons",
                  },
                  "ref": null,
                  "rendered": "location_on",
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Denver",
                  },
                  "ref": null,
                  "rendered": "Denver",
                  "type": "h1",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "buffer",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "ariaCurrent": "true",
                "children": Array [
                  <div
                    className="txt"
>
                    <div
                                        className="txt"
                                        onClick={[Function]}
                    >
                                        Log Out
                    </div>
</div>,
                  <div
                    className="ico"
>
                    <svg
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                        xmlns="http://www.w3.org/2000/svg"
                    >
                                        <path
                                                            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                        />
                                        <path
                                                            d="M0 0h24v24H0z"
                                                            fill="none"
                                        />
                    </svg>
</div>,
                ],
                "className": "signink",
                "to": "/signin",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="txt"
                      onClick={[Function]}
>
                      Log Out
</div>,
                    "className": "txt",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Log Out",
                      "className": "txt",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Log Out",
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <svg
                      height="24"
                      viewBox="0 0 24 24"
                      width="24"
                      xmlns="http://www.w3.org/2000/svg"
>
                      <path
                                            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                      />
                      <path
                                            d="M0 0h24v24H0z"
                                            fill="none"
                      />
</svg>,
                    "className": "ico",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <path
                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
/>,
                        <path
                          d="M0 0h24v24H0z"
                          fill="none"
/>,
                      ],
                      "height": "24",
                      "viewBox": "0 0 24 24",
                      "width": "24",
                      "xmlns": "http://www.w3.org/2000/svg",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "d": "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "path",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "d": "M0 0h24v24H0z",
                          "fill": "none",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "path",
                      },
                    ],
                    "type": "svg",
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="profile box"
>
                <Connect(NavBar)
                                makeCommunityActive={[Function]}
                                makeEventsActive={[Function]}
                                makeStudioActive={[Function]}
                />
</div>,
              <div
                className="posts box"
>
                <div
                                className="filters"
                >
                                <NavLink
                                                activeClassName="active"
                                                ariaCurrent="true"
                                                className="main-btn"
                                                onClick={[Function]}
                                                to="/"
                                >
                                                Post!
                                </NavLink>
                                <NavLink
                                                activeClassName="active"
                                                ariaCurrent="true"
                                                className="main-btn"
                                                to="/entertainment"
                                >
                                                Videos
                                </NavLink>
                                <button
                                                className="main-btn"
                                                onClick={[Function]}
                                >
                                                Events
                                </button>
                                <button
                                                className="main-btn"
                                                onClick={[Function]}
                                >
                                                Studios
                                </button>
                </div>
                <div
                                className="main-box"
                >
                                <Connect(Community) />
                </div>
</div>,
              <div
                className="stack"
>
                <div
                                className="stacked  box"
                                id="studios"
                />
                <div
                                className="stacked  box"
                                id="featured"
                >
                                <h3>
                                                Featured Video
                                </h3>
                                <iframe
                                                allow="autoplay; encrypted-media"
                                                allowFullScreen={true}
                                                frameBorder="0"
                                                height="215"
                                                src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                                                width="350"
                                />
                </div>
</div>,
            ],
            "className": "main",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(NavBar)
                  makeCommunityActive={[Function]}
                  makeEventsActive={[Function]}
                  makeStudioActive={[Function]}
/>,
                "className": "profile box",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "makeCommunityActive": [Function],
                  "makeEventsActive": [Function],
                  "makeStudioActive": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="filters"
>
                    <NavLink
                                        activeClassName="active"
                                        ariaCurrent="true"
                                        className="main-btn"
                                        onClick={[Function]}
                                        to="/"
                    >
                                        Post!
                    </NavLink>
                    <NavLink
                                        activeClassName="active"
                                        ariaCurrent="true"
                                        className="main-btn"
                                        to="/entertainment"
                    >
                                        Videos
                    </NavLink>
                    <button
                                        className="main-btn"
                                        onClick={[Function]}
                    >
                                        Events
                    </button>
                    <button
                                        className="main-btn"
                                        onClick={[Function]}
                    >
                                        Studios
                    </button>
</div>,
                  <div
                    className="main-box"
>
                    <Connect(Community) />
</div>,
                ],
                "className": "posts box",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="main-btn"
                        onClick={[Function]}
                        to="/"
>
                        Post!
</NavLink>,
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="main-btn"
                        to="/entertainment"
>
                        Videos
</NavLink>,
                      <button
                        className="main-btn"
                        onClick={[Function]}
>
                        Events
</button>,
                      <button
                        className="main-btn"
                        onClick={[Function]}
>
                        Studios
</button>,
                    ],
                    "className": "filters",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Post!",
                        "className": "main-btn",
                        "onClick": [Function],
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": "Post!",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "activeClassName": "active",
                        "ariaCurrent": "true",
                        "children": "Videos",
                        "className": "main-btn",
                        "to": "/entertainment",
                      },
                      "ref": null,
                      "rendered": "Videos",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Events",
                        "className": "main-btn",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Events",
                      "type": "button",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Studios",
                        "className": "main-btn",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Studios",
                      "type": "button",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(Community) />,
                    "className": "main-box",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="stacked  box"
                    id="studios"
/>,
                  <div
                    className="stacked  box"
                    id="featured"
>
                    <h3>
                                        Featured Video
                    </h3>
                    <iframe
                                        allow="autoplay; encrypted-media"
                                        allowFullScreen={true}
                                        frameBorder="0"
                                        height="215"
                                        src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                                        width="350"
                    />
</div>,
                ],
                "className": "stack",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "stacked  box",
                    "id": "studios",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h3>
                        Featured Video
</h3>,
                      <iframe
                        allow="autoplay; encrypted-media"
                        allowFullScreen={true}
                        frameBorder="0"
                        height="215"
                        src="https://www.youtube.com/embed/2X2tCidTfEU?rel=0"
                        width="350"
/>,
                    ],
                    "className": "stacked  box",
                    "id": "featured",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Featured Video",
                      },
                      "ref": null,
                      "rendered": "Featured Video",
                      "type": "h3",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "allow": "autoplay; encrypted-media",
                        "allowFullScreen": true,
                        "frameBorder": "0",
                        "height": "215",
                        "src": "https://www.youtube.com/embed/2X2tCidTfEU?rel=0",
                        "width": "350",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "iframe",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

exports[`main matches snapshot 1`] = `undefined`;
