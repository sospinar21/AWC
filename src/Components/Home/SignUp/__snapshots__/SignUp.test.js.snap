// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`signUp matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignUp
    suggestedEvents={
        Array [
            Object {
              "name": "party",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          SIGN UP
</h3>,
        <div
          className="logo"
>
          <div
                    className="logocir"
          >
                    AWC
          </div>
</div>,
        <h4
          className="created"
>
           
</h4>,
        <form
          autoComplete="on"
          className="form"
>
          <input
                    autoComplete="on"
                    className="email"
                    name="email"
                    onChange={[Function]}
                    placeholder="Email"
                    type="email"
                    value=""
          />
          <input
                    autoComplete="on"
                    className="password"
                    name="password"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
          />
          <input
                    autoComplete="on"
                    className="city"
                    name="city"
                    onChange={[Function]}
                    placeholder="City"
                    value=""
          />
          <button
                    className="signup"
                    disabled={true}
                    onClick={[Function]}
          >
                    Sign Up 
          </button>
</form>,
        <div
          className="policy"
>
          <p>
                    By signing up, you agree to our Terms, Data Policy and Cookies Policy.
          </p>
</div>,
      ],
      "className": "signup-box",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "SIGN UP",
        },
        "ref": null,
        "rendered": "SIGN UP",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="logocir"
>
            AWC
</div>,
          "className": "logo",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "AWC",
            "className": "logocir",
          },
          "ref": null,
          "rendered": "AWC",
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " ",
          "className": "created",
        },
        "ref": null,
        "rendered": " ",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "autoComplete": "on",
          "children": Array [
            <input
              autoComplete="on"
              className="email"
              name="email"
              onChange={[Function]}
              placeholder="Email"
              type="email"
              value=""
/>,
            <input
              autoComplete="on"
              className="password"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
/>,
            <input
              autoComplete="on"
              className="city"
              name="city"
              onChange={[Function]}
              placeholder="City"
              value=""
/>,
            <button
              className="signup"
              disabled={true}
              onClick={[Function]}
>
              Sign Up 
</button>,
          ],
          "className": "form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "on",
              "className": "email",
              "name": "email",
              "onChange": [Function],
              "placeholder": "Email",
              "type": "email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "on",
              "className": "password",
              "name": "password",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "on",
              "className": "city",
              "name": "city",
              "onChange": [Function],
              "placeholder": "City",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign Up ",
              "className": "signup",
              "disabled": true,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Sign Up ",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            By signing up, you agree to our Terms, Data Policy and Cookies Policy.
</p>,
          "className": "policy",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "By signing up, you agree to our Terms, Data Policy and Cookies Policy.",
          },
          "ref": null,
          "rendered": "By signing up, you agree to our Terms, Data Policy and Cookies Policy.",
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            SIGN UP
</h3>,
          <div
            className="logo"
>
            <div
                        className="logocir"
            >
                        AWC
            </div>
</div>,
          <h4
            className="created"
>
             
</h4>,
          <form
            autoComplete="on"
            className="form"
>
            <input
                        autoComplete="on"
                        className="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Email"
                        type="email"
                        value=""
            />
            <input
                        autoComplete="on"
                        className="password"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
            />
            <input
                        autoComplete="on"
                        className="city"
                        name="city"
                        onChange={[Function]}
                        placeholder="City"
                        value=""
            />
            <button
                        className="signup"
                        disabled={true}
                        onClick={[Function]}
            >
                        Sign Up 
            </button>
</form>,
          <div
            className="policy"
>
            <p>
                        By signing up, you agree to our Terms, Data Policy and Cookies Policy.
            </p>
</div>,
        ],
        "className": "signup-box",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SIGN UP",
          },
          "ref": null,
          "rendered": "SIGN UP",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="logocir"
>
              AWC
</div>,
            "className": "logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "AWC",
              "className": "logocir",
            },
            "ref": null,
            "rendered": "AWC",
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " ",
            "className": "created",
          },
          "ref": null,
          "rendered": " ",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "on",
            "children": Array [
              <input
                autoComplete="on"
                className="email"
                name="email"
                onChange={[Function]}
                placeholder="Email"
                type="email"
                value=""
/>,
              <input
                autoComplete="on"
                className="password"
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
/>,
              <input
                autoComplete="on"
                className="city"
                name="city"
                onChange={[Function]}
                placeholder="City"
                value=""
/>,
              <button
                className="signup"
                disabled={true}
                onClick={[Function]}
>
                Sign Up 
</button>,
            ],
            "className": "form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoComplete": "on",
                "className": "email",
                "name": "email",
                "onChange": [Function],
                "placeholder": "Email",
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoComplete": "on",
                "className": "password",
                "name": "password",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoComplete": "on",
                "className": "city",
                "name": "city",
                "onChange": [Function],
                "placeholder": "City",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign Up ",
                "className": "signup",
                "disabled": true,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Sign Up ",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              By signing up, you agree to our Terms, Data Policy and Cookies Policy.
</p>,
            "className": "policy",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "By signing up, you agree to our Terms, Data Policy and Cookies Policy.",
            },
            "ref": null,
            "rendered": "By signing up, you agree to our Terms, Data Policy and Cookies Policy.",
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
